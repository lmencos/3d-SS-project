{"version":3,"sources":["pages/model/scene.gltf","pages/images/arid2_ft.jpg","pages/images/arid2_bk.jpg","pages/images/arid2_up.jpg","pages/images/arid2_dn.jpg","pages/images/arid2_rt.jpg","pages/images/arid2_lf.jpg","pages/Three.js","pages/Mask.js","App.js","serviceWorker.js","components/Navbar.js","pages/Gallery.js","pages/Projects.js","pages/ContactUs.js","pages/SignIn.js","index.js"],"names":["module","exports","__webpack_require__","p","window","THREE","require","Mask","scene","camera","renderer","animate","render","requestAnimationFrame","Scene","background","Color","PerspectiveCamera","innerWidth","innerHeight","rotation","y","Math","PI","position","x","z","OrbitControls","addEventListener","hlight","AmbientLight","add","directionalLight","DirectionalLight","set","castShadow","light","PointLight","light2","light3","light4","WebGLRenderer","antialias","setSize","document","body","appendChild","domElement","width","height","aspect","updateProjectionMatrix","event","preventDefault","stopPropagation","loader","GLTFLoader","url","ModelMask","load","gltf","children","scale","xhr","console","log","concat","loaded","total","error","init","_this","this","react_default","a","createElement","ref","mount","Component","App","className","pages_Mask","Boolean","location","hostname","match","NavBar","react_router_dom","to","Gallery","React","Sky","controls","minDistance","maxDistance","materialArray","texture_ft","TextureLoader","ft","texture_bk","bk","texture_up","up","texture_dn","dn","texture_rt","rt","texture_lf","lf","push","MeshBasicMaterial","map","i","side","BackSide","skyboxGeo","BoxGeometry","skybox","Mesh","ContactUs","SignIn","ReactDOM","Navbar","react_router","exact","path","component","Projects","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08959a21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scene.b79f0bec.gltf\";","module.exports = __webpack_public_path__ + \"static/media/arid2_ft.6a76a7ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arid2_bk.238766bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arid2_up.e0e3a4fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arid2_dn.5d5b8be3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arid2_rt.64c0edaa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arid2_lf.2a53a848.jpg\";","import * as THREE from 'three';\n\nwindow.THREE = THREE;\nrequire('three/examples/js/loaders/GLTFLoader');\nrequire('three/examples/js/controls/OrbitControls');\n\nexport default window.THREE;","import React, { Component } from \"react\";\nimport THREE from './Three';\nimport ModelMask from './model/scene.gltf';\n\n\nclass Mask extends Component {\n\n  componentDidMount() {\n\n    // === THREE.JS CODE START ===\n    let scene, camera, renderer;\n    const init = () => {\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xffffff);\n\n      camera = new THREE.PerspectiveCamera(\n        90,\n        window.innerWidth / window.innerHeight,\n        .3,\n        500\n      );\n\n      camera.rotation.y = 45 / 180 * Math.PI;\n      camera.position.x = 0;\n      camera.position.y = 1;\n      camera.position.z = 2;\n\n      let controls = new THREE.OrbitControls(camera);\n      controls.addEventListener('change', renderer);\n\n      let hlight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(hlight);\n\n      let directionalLight = new THREE.DirectionalLight(0xffa647, 0.5);\n      directionalLight.position.set(0, 1, 0);\n      directionalLight.castShadow = true;\n      scene.add(directionalLight);\n\n      let light = new THREE.PointLight(0xfccf9f, 0.9);\n      light.position.set(0, 30, 50);\n      scene.add(light);\n\n      let light2 = new THREE.PointLight(0xffa647, 1.2);\n      light2.position.set(50, 10, 0);\n      scene.add(light2);\n\n      let light3 = new THREE.PointLight(0xfffdfa, 1.8);\n      light3.position.set(0, 100, -500);\n      scene.add(light3);\n\n      let light4 = new THREE.PointLight(0xfffdfa, 1.8);\n      light4.position.set(-500, 300, 500);\n      scene.add(light4);\n\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setSize(window.innerWidth * 1, window.innerHeight * 1);\n      document.body.appendChild(renderer.domElement);\n\n      window.addEventListener('resize', () => {\n          let width = window.innerWidth;\n          let height = window.innerHeight;\n          renderer.setSize( width, height );\n          camera.aspect = width / height;\n          camera.updateProjectionMatrix( );\n      } )\n\n      \n      window.addEventListener('onMouseWheel', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n      } )\n\n\n      const loader = new THREE.GLTFLoader();\n      const url = ModelMask;\n      loader.load(\n        url,\n        (gltf) => {\n          let mask = gltf.scene.children[0];\n          mask.scale.set(0.5, 0.5, 0.5);\n          scene.add(gltf.scene);\n          animate();\n        },\n        (xhr) => {\n          console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`);\n        },\n        (error) => {\n          console.error('An error has happened', error)\n        },\n      );\n    }\n\n    let animate = () => {\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    }\n\n    init();\n    // === THREE.JS EXAMPLE CODE END ===\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>I am an ancient mexican mask coming from Three js</h2>\n        <small>Object: gltf made in Blender 2.8  </small>\n        <small>  Author: Daniel Cabrera </small>\n        <div ref={ref => (this.mount = ref)} />\n      </div>\n    )\n  }\n}\nexport default Mask;","import React from 'react';\nimport './App.css';\nimport Mask from '../src/pages/Mask';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n     <Mask  />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './styles/NavBar.css';\nimport {Link} from 'react-router-dom';\n\nconst NavBar = () => {\n  return (\n    <div className=\"navBar-container\">\n      <nav className=\"navBar\">\n        <ul className=\"navBar-ul\">\n          <li>\n            <Link to=\"/gallery\" className=\"navRef\" >Gallery</Link>\n          </li>\n          <li>\n            <Link to=\"/projects\" className=\"navRef\">Projects</Link>\n          </li>\n          <li>\n            <Link to=\"/contactUs\" className=\"navRef\">Contact us</Link>\n          </li>\n          <li>\n            <Link to=\"/SignIn\" className=\"navRef\">Sign in</Link>\n          </li>\n          <li>\n            <Link to=\"/\" className=\"navRef\">Home</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\nexport default NavBar;","import React from 'react';\n\nclass Gallery extends React.Component {\n  render (){\n    return (\n      <h1>Soy la galería</h1>\n    )\n  }\n}\nexport default Gallery;","import React, { Component } from \"react\";\nimport THREE from './Three';\nimport ft from './images/arid2_ft.jpg'\nimport bk from './images/arid2_bk.jpg'\nimport up from './images/arid2_up.jpg'\nimport dn from './images/arid2_dn.jpg'\nimport rt from './images/arid2_rt.jpg'\nimport lf from './images/arid2_lf.jpg'\n// import * as THREE from \"three\"\n// const OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nclass Sky extends Component {\n\n  componentDidMount() {\n\n    // === THREE.JS CODE START ===\n    let scene, camera, renderer;\n    const init = () => {\n      scene = new THREE.Scene();\n      //scene.background = new THREE.Color(0xffffff);\n\n      camera = new THREE.PerspectiveCamera(\n        55,\n        window.innerWidth / window.innerHeight,\n        45,\n        30000\n      );\n      camera.position.set(-900, -200, -900);\n\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n\n      let controls = new THREE.OrbitControls(camera);\n      controls.addEventListener('change', renderer);\n      controls.minDistance = 500;\n      controls.maxDistance = 1500;\n\n\n      window.addEventListener('resize', () => {\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n        renderer.setSize( width, height );\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix( );\n      } )\n\n\n      let materialArray = [];\n\n      let texture_ft = new THREE.TextureLoader().load(ft);\n      let texture_bk = new THREE.TextureLoader().load(bk);\n      let texture_up = new THREE.TextureLoader().load(up);\n      let texture_dn = new THREE.TextureLoader().load(dn);\n      let texture_rt = new THREE.TextureLoader().load(rt);\n      let texture_lf = new THREE.TextureLoader().load(lf);\n\n      // let texture_ft = new THREE.TextureLoader().load('./images/barren_ft.jpg');\n      // let texture_bk = new THREE.TextureLoader().load('./images/barren_bk.jpg');\n      // let texture_up = new THREE.TextureLoader().load('./images/barren_up.jpg');\n      // let texture_dn = new THREE.TextureLoader().load('./images/barren_dn.jpg');\n      // let texture_rt = new THREE.TextureLoader().load('./images/barren_rt.jpg');\n      // let texture_lf = new THREE.TextureLoader().load('./images/barren_lf.jpg');\n\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }));\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_bk }));\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_up }));\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_dn }));\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_rt }));\n      materialArray.push(new THREE.MeshBasicMaterial({ map: texture_lf }));\n\n      for (let i = 0; i < 6; i++)\n        materialArray[i].side = THREE.BackSide;\n\n      let skyboxGeo = new THREE.BoxGeometry(10000, 10000, 10000);\n      let skybox = new THREE.Mesh(skyboxGeo, materialArray);\n      scene.add(skybox);\n\n      animate();\n    }\n\n    let animate = () => {\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    }\n\n    init();\n    // === THREE.JS EXAMPLE CODE END ===\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={ref => (this.mount = ref)} />\n      </div>\n    )\n  }\n}\nexport default Sky;","import React from 'react';\n\nclass ContactUs extends React.Component {\n  render (){\n    return (\n      <h1>Soy Contact us</h1>\n    )\n  }\n}\nexport default ContactUs;","import React from 'react';\n\nclass SignIn extends React.Component {\n  render (){\n    return (\n      <h1>Soy Sign In</h1>\n    )\n  }\n}\nexport default SignIn;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from '../src/components/Navbar';\nimport Gallery from '../src/pages/Gallery';\nimport Projects from '../src/pages/Projects';\nimport ContactUs from '../src/pages/ContactUs';\nimport SignIn from '../src/pages/SignIn';\n\n\nReactDOM.render(\n\n  <BrowserRouter>\n  <NavBar  />\n    <Switch>\n    <Route exact path=\"/\" component={App}/>\n    <Route exact path=\"/gallery\" component={Gallery} />\n    <Route exact path=\"/projects\" component={Projects} />\n    <Route exact path=\"/contactUs\" component={ContactUs} />\n    <Route exact path=\"/signIn\" component={SignIn} />\n    </Switch>\n  </BrowserRouter>,\n\ndocument.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}